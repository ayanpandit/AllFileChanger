# Render.com Deployment Configuration for AllFileChanger Image Converter API
# This file configures the deployment settings for high-performance image conversion

services:
  # Main Image Converter API Service
  - type: web
    name: allfilechanger-image-converter-api
    env: node
    repo: https://github.com/your-username/AllFileChanger.git  # Update this with your repo URL
    buildCommand: npm install --production
    startCommand: npm run prod
    plan: starter  # Change to 'standard' or 'pro' for production
    rootDir: backend/img/imgconverter
    region: oregon  # Choose: oregon, frankfurt, singapore, ohio
    
    # Health Check Configuration
    healthCheckPath: /health
    
    # Environment Variables
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        fromService:
          type: web
          name: allfilechanger-image-converter-api
          property: port
      - key: RENDER_EXTERNAL_URL
        fromService:
          type: web
          name: allfilechanger-image-converter-api
          property: host
    
    # Scaling Configuration
    scaling:
      minInstances: 1
      maxInstances: 3  # Auto-scale up to 3 instances under load
      targetCPUPercent: 70  # Scale when CPU hits 70%
      targetMemoryPercent: 80  # Scale when memory hits 80%
    
    # Resource Limits
    disk:
      name: image-converter-disk
      size: 1GB
      mount: /tmp  # Temporary storage for image processing
    
    # Advanced Settings
    dockerCommand: ""
    dockerContext: ""
    dockerfilePath: ""
    
    # Auto-Deploy Settings
    autoDeploy: true  # Auto-deploy on git push
    branch: main  # Deploy from main branch
    
    # Custom Headers (handled in application)
    headers: []
    
    # Routes (all handled by Express app)
    routes: []

# Database Configuration (if needed in future)
databases: []

# Static Site Configuration (for frontend if needed)
staticSites: []

# Background Workers (if needed for heavy processing)
workers: []

# Cron Jobs (for maintenance tasks)
cronjobs:
  # Memory cleanup every hour
  - name: memory-cleanup
    schedule: "0 * * * *"  # Every hour
    buildCommand: echo "Memory cleanup scheduled"
    startCommand: curl -f $RENDER_EXTERNAL_URL/health || echo "Health check failed"

# Notification Settings
notifications:
  - type: email
    emails:
      - admin@allfilechanger.com  # Update with your email
    events:
      - deploy-failed
      - deploy-succeeded
      - service-suspended

# Build Settings
buildFilter:
  paths:
    - backend/img/imgconverter/**
  ignoredPaths:
    - README.md
    - docs/**
    - test/**
    - .gitignore

# Performance Optimizations
performance:
  # CDN settings (if applicable)
  cdn:
    enabled: false  # Enable if you want CDN for static assets
    
  # Compression (handled in application)
  compression:
    enabled: true
    
  # Cache settings
  cache:
    enabled: true
    duration: 300  # 5 minutes for API responses
